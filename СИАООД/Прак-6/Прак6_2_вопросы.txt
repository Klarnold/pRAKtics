1) Строка - упорядоченная последовательность символов. 
Префикс строки - это подстрока, у которой начальная позиция совпадает с начальной пизицией самой строки
Суффикс строки - это подстрока размером в какое-то слово.
2) Идея наивного алгоритма поиска - проходимся по каждому элементу строки последовательно сравнивая с образцом. 
Сложность ( О( m*(n-m) ) ) в худшем случае - O(n^2), а влучшем O(n).
3) Оптимизация при помощи машинного обучения (баейсовский алгоритм), при помощи знания длины образца
4) Идея алгоритма заключается в предварительных вычислениях над подстрокой  (образец передвигается по 
строке до ближайшего совпадения)
5) O(m+n) - затраты времени, O(m) - затраты памяти
6) Чем больше таблица, тем дольше поиск
7) За счёт его эффективной работой с необработанным текстом
8) Префикс-функция - находит длину слова. Префикс функция помогает в принципе работать методу Кнута-Морриса-Пратта
(КМП) сложность O(n).

Префикс-функция от строки S и позиции i в ней — длина k наибольшего собственного (не равного 
всей подстроке) префикса подстроки S[1..i], который одновременно является суффиксом этой подстроки.

То есть в начале подстроки S[1..i] длины i нужно найти такой префикс максимальной длины k < i,
который был бы суффиксом данной подстроки.

Часто префикс-функцию определяют в векторной форме.
9) Это получится если сравнивать с подобными строками
10) Алгоритм Рабина-Карпа  в. Ищет пдостроки используя хеширование. Мы преобразуем кажду строку 
в хеш и ищем искомый.
11) В  худшем случае О(m*n), а в лучшем О(n)
12) Идея алгоритма Ахо-Корасика создаём автомат поиска. Ёмкостная сложность О(m*A) (А - размер алфавита, 
m - длина всех слов)
Вычислительная сложность О(m*A + n + k) (n - длина текста, k - общая длина всех совпадений)
